name: Integration Tests

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    branches: [ develop ]

jobs:
  integration-test:
    name: Integration Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-
      
      - name: Generate __config__.py
        run: python generate_config.py
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "numpy>=1.26.0,<2.0"
          pip install meson-python>=0.15.0
          pip install meson>=1.2.0
          pip install ninja
          pip install cython>=3.0
          pip install tempita>=0.5.2  # Required for template processing
      
      - name: Install project with test dependencies
        run: |
          pip install -e ".[test]" --no-build-isolation
      
      - name: Create output directory
        run: mkdir -p _testing_output
      
      - name: Run integration tests with coverage
        run: |
          export GIT_HASH=$(git log --pretty=format:'%h' -n 1)
          echo "GIT_HASH: $GIT_HASH" > _testing_output/pytest_integration_output.txt
          pytest --color=yes \
            --cov-config coverage.cfg \
            --cov=redblackgraph \
            --cov-fail-under=65 \
            --cov-report term-missing \
            --cov-report xml:coverage.xml \
            --cov-report html:_testing_output/coverage_html \
            --durations=10 \
            --slow \
            tests | tee -a _testing_output/pytest_integration_output.txt
      
      - name: Upload coverage report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage-py${{ matrix.python-version }}
          path: |
            coverage.xml
            _testing_output/coverage_html/
          retention-days: 30
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-results-py${{ matrix.python-version }}
          path: _testing_output/
          retention-days: 30

  integration-summary:
    name: Integration Test Summary
    runs-on: ubuntu-latest
    needs: [integration-test]
    if: always()
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.integration-test.result }}" == "failure" ]; then
            echo "❌ Integration tests failed"
            exit 1
          else
            echo "✅ All integration tests passed"
          fi
